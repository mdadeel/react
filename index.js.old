#!/usr/bin/env node

import inquirer from 'inquirer';
import chalk from 'chalk';
import ora from 'ora';
import { execSync } from 'child_process';
import fs from 'fs-extra';
import path from 'path';

// Neofetch-style banner with SA ASCII on left and info on right
const saArt = [
  ` ${chalk.hex('#6C63FF')('‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ')}${chalk.hex('#B0B0B0')('‚îÇ Package:     ')}${chalk.hex('#6C63FF').bold('reactapp-project-setup')}`,
  ` ${chalk.hex('#6C63FF')('‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó')}${chalk.hex('#B0B0B0')('‚îÇ Version:     ')}${chalk.hex('#6C63FF').bold('v4.7.0')}`,
  ` ${chalk.hex('#6C63FF')(' ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù')}${chalk.hex('#B0B0B0')('‚îÇ Created:     ')}${chalk.hex('#6C63FF').bold('2025')}`,
  ` ${chalk.hex('#6C63FF')(' ‚ïö‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó')}${chalk.hex('#B0B0B0')('‚îÇ License:     ')}${chalk.hex('#6C63FF').bold('MIT')}`,
  ` ${chalk.hex('#6C63FF')('‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù')}${chalk.hex('#B0B0B0')('‚îÇ OS:          ')}${chalk.hex('#6C63FF').bold('Node.js >=18.0.0')}`,
  ` ${chalk.hex('#6C63FF')('‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ')}${chalk.hex('#B0B0B0')('‚îÇ Shell:       ')}${chalk.hex('#6C63FF').bold('CLI Interface')}`,
  `         ${chalk.hex('#B0B0B0')('‚îÇ Terminal:    ')}${chalk.hex('#6C63FF').bold('Inquirer.js')}`,
  `         ${chalk.hex('#B0B0B0')('‚îÇ Author:      ')}${chalk.hex('#6C63FF').bold('Shahnawas Adeel')}`,
  `         ${chalk.hex('#B0B0B0')('‚îÇ GitHub:      ')}${chalk.hex('#6C63FF').bold('mdadeel/reactapp-project-setup')}`,
  ` `,
  ` ${chalk.hex('#6C63FF').bold('üöÄ Create Modern Web Apps in Seconds')}`,
  ` ${chalk.hex('#8A86A0').italic('The fastest way to scaffold your next project')}`
];

// Clear screen and show neofetch-style banner
console.clear();
saArt.forEach(line => console.log(line));
console.log('');

// Terminal-style tips
console.log(` ${chalk.hex('#2ECC71').bold('üí° Tip:')} ${chalk.hex('#B0B0B0')('Use')} ${chalk.hex('#6C63FF').bold('‚Üë‚Üì')} ${chalk.hex('#B0B0B0')('to navigate,')} ${chalk.hex('#6C63FF').bold('Enter')} ${chalk.hex('#B0B0B0')('to select,')} ${chalk.hex('#6C63FF').bold('Space')} ${chalk.hex('#B0B0B0')('to toggle')}\n`);

// Enhanced prompts with modern styling
const questions = [
  {
    type: 'input',
    name: 'projectName',
    message: chalk.hex('#6C63FF').bold('‚îå‚îÄ üìÅ Project name:'),
    default: 'my-app',
    prefix: chalk.hex('#6C63FF')('‚îî‚îÄ‚îÄ'),
    validate: (input) => {
      if (/^([A-Za-z\\-\\_\\d])+$/.test(input)) return true;
      return chalk.red('‚ùå Only letters, numbers, dashes and underscores allowed');
    },
    transformer: (input) => chalk.hex('#6C63FF')(input)
  },
  {
    type: 'list',
    name: 'framework',
    message: chalk.hex('#6C63FF').bold('‚îå‚îÄ üé® Choose your framework:'),
    prefix: chalk.hex('#6C63FF')('‚îî‚îÄ‚îÄ'),
    choices: [
      { name: `  ${chalk.hex('#61DAFB')('‚öõÔ∏è')}   ${chalk.hex('#61DAFB').bold('React')} ${chalk.hex('#B0B0B0')('- The UI library everyone loves')}`, value: 'react', short: 'React' },
      { name: `  ${chalk.hex('#42B883')('üíö')}   ${chalk.hex('#42B883').bold('Vue')} ${chalk.hex('#B0B0B0')('- Progressive & powerful')}`, value: 'vue', short: 'Vue' },
      { name: `  ${chalk.hex('#FF3E00')('üî∫')}   ${chalk.hex('#FF3E00').bold('Svelte')} ${chalk.hex('#B0B0B0')('- Truly reactive magic')}`, value: 'svelte', short: 'Svelte' },
      { name: `  ${chalk.hex('#673AB8')('üî∑')}   ${chalk.hex('#673AB8').bold('Preact')} ${chalk.hex('#B0B0B0')('- Fast 3KB alternative')}`, value: 'preact', short: 'Preact' },
      { name: `  ${chalk.hex('#00E8FF')('üî∂')}   ${chalk.hex('#00E8FF').bold('Lit')} ${chalk.hex('#B0B0B0')('- Web components made simple')}`, value: 'lit', short: 'Lit' },
      { name: `  ${chalk.hex('#F7DF1E')('‚ö°')}   ${chalk.hex('#F7DF1E').bold('Vanilla')} ${chalk.hex('#B0B0B0')('- Pure JS, no framework')}`, value: 'vanilla', short: 'Vanilla' }
    ],
    default: 'react',
    pageSize: 6,
    loop: false,
    // Highlight selected option
    transformer: (answer, { isFinal }) => {
      if (isFinal) {
        return chalk.bgHex('#6C63FF').hex('#FFFFFF')(answer);
      }
      return answer;
    }
  },
  {
    type: 'list',
    name: 'language',
    message: chalk.hex('#6C63FF').bold('‚îå‚îÄ üìù Select language:'),
    prefix: chalk.hex('#6C63FF')('‚îî‚îÄ‚îÄ'),
    choices: [
      { name: `  ${chalk.hex('#3178C6')('üìò')}   ${chalk.hex('#3178C6').bold('TypeScript')} ${chalk.hex('#B0B0B0')('- Type-safe & scalable')}`, value: 'typescript', short: 'TypeScript' },
      { name: `  ${chalk.hex('#F7DF1E')('üìô')}   ${chalk.hex('#F7DF1E').bold('JavaScript')} ${chalk.hex('#B0B0B0')('- Classic & flexible')}`, value: 'javascript', short: 'JavaScript' }
    ],
    default: 'javascript',
    loop: false,
    // Highlight selected option
    transformer: (answer, { isFinal }) => {
      if (isFinal) {
        return chalk.bgHex('#6C63FF').hex('#FFFFFF')(answer);
      }
      return answer;
    }
  },
  {
    type: 'confirm',
    name: 'tailwind',
    message: chalk.hex('#6C63FF').bold('‚îå‚îÄ üé® Add Tailwind CSS v4?') + chalk.hex('#B0B0B0')(' (Latest beta with new engine)'),
    prefix: chalk.hex('#6C63FF')('‚îî‚îÄ‚îÄ'),
    default: true,
    when: (answers) => ['react', 'vue', 'svelte', 'preact'].includes(answers.framework),
    transformer: (answer) => answer ? chalk.bgHex('#27AE60').hex('#FFFFFF')(' YES ') : chalk.bgHex('#E74C3C').hex('#FFFFFF')(' NO ')
  },
  {
    type: 'confirm',
    name: 'router',
    message: chalk.hex('#6C63FF').bold('‚îå‚îÄ üß≠ Include router?') + chalk.hex('#B0B0B0')(' (For multi-page apps)'),
    prefix: chalk.hex('#6C63FF')('‚îî‚îÄ‚îÄ'),
    default: false,
    when: (answers) => ['react', 'vue', 'svelte'].includes(answers.framework),
    transformer: (answer) => answer ? chalk.bgHex('#27AE60').hex('#FFFFFF')(' YES ') : chalk.bgHex('#E74C3C').hex('#FFFFFF')(' NO ')
  },
  {
    type: 'confirm',
    name: 'folderStructure',
    message: chalk.hex('#6C63FF').bold('‚îå‚îÄ üìÅ Organized folder structure?') + chalk.hex('#B0B0B0')(' (Best practices)'),
    prefix: chalk.hex('#6C63FF')('‚îî‚îÄ‚îÄ'),
    default: true,
    transformer: (answer) => answer ? chalk.bgHex('#27AE60').hex('#FFFFFF')(' YES ') : chalk.bgHex('#E74C3C').hex('#FFFFFF')(' NO ')
  }
];

// Helper functions
const getTemplate = (framework, language) => {
  const templates = {
    react: language === 'typescript' ? 'react-ts' : 'react',
    vue: language === 'typescript' ? 'vue-ts' : 'vue',
    svelte: language === 'typescript' ? 'svelte-ts' : 'svelte',
    preact: language === 'typescript' ? 'preact-ts' : 'preact',
    lit: language === 'typescript' ? 'lit-ts' : 'lit',
    vanilla: language === 'typescript' ? 'vanilla-ts' : 'vanilla'
  };
  return templates[framework];
};

// Modern gradient box
const drawModernBox = (title, content) => {
  const width = 60;
  console.log(chalk.hex('#6C63FF')('‚îå') + chalk.hex('#9B87F5')('‚îÄ'.repeat(width)) + chalk.hex('#B465DA')('‚îê'));
  console.log(chalk.hex('#6C63FF')('‚îÇ') + chalk.hex('#6C63FF').bold(title.padEnd(width)) + chalk.hex('#B465DA')('‚îÇ'));
  console.log(chalk.hex('#6C63FF')('‚îú') + chalk.hex('#9B87F5')('‚îÄ'.repeat(width)) + chalk.hex('#B465DA')('‚î§'));
  content.forEach(line => {
    console.log(chalk.hex('#6C63FF')('‚îÇ') + ' ' + line.padEnd(width - 1) + chalk.hex('#B465DA')('‚îÇ'));
  });
  console.log(chalk.hex('#6C63FF')('‚îî') + chalk.hex('#9B87F5')('‚îÄ'.repeat(width)) + chalk.hex('#B465DA')('‚îò'));
};

async function createProject() {
  try {
    const answers = await inquirer.prompt(questions);
    const { projectName, framework, language, tailwind, router, folderStructure } = answers;
    
    // Framework info with emojis
    const frameworkInfo = {
      react: { emoji: '‚öõÔ∏è', desc: 'Most popular UI library with huge ecosystem', color: '#61DAFB' },
      vue: { emoji: 'üíö', desc: 'Progressive framework easy to learn & powerful', color: '#42B883' },
      svelte: { emoji: 'üî∫', desc: 'Truly reactive with no virtual DOM overhead', color: '#FF3E00' },
      preact: { emoji: 'üî∑', desc: 'Fast 3KB alternative with same API', color: '#673AB8' },
      lit: { emoji: 'üî∂', desc: 'Simple, fast web components', color: '#00E8FF' },
      vanilla: { emoji: '‚ö°', desc: 'Pure JavaScript with no framework', color: '#F7DF1E' }
    };
    
    console.log('\\n' + chalk.hex(frameworkInfo[framework].color)('  ‚úì Selected: ') + 
                frameworkInfo[framework].emoji + ' ' + 
                chalk.hex('#6C63FF').bold(framework.toUpperCase()));
    console.log(chalk.hex('#B0B0B0')('    ' + frameworkInfo[framework].desc) + '\\n');
    
    const projectPath = path.join(process.cwd(), projectName);
    const template = getTemplate(framework, language);
    const isTypeScript = language === 'typescript';
    
    // Configuration summary
    console.log('\\n');
    drawModernBox('  üìã YOUR CONFIGURATION', [
      '',
      `  ${chalk.hex('#B0B0B0')('Project:')}      ${chalk.hex('#6C63FF').bold(projectName)}`,
      `  ${chalk.hex('#B0B0B0')('Framework:')}    ${chalk.hex('#6C63FF').bold(framework.toUpperCase())}`,
      `  ${chalk.hex('#B0B0B0')('Language:')}     ${chalk.hex('#6C63FF').bold(isTypeScript ? 'TypeScript' : 'JavaScript')}`,
      `  ${chalk.hex('#B0B0B0')('Tailwind v4:')}  ${tailwind ? chalk.hex('#2ECC71').bold('‚úì Yes') : chalk.red.bold('‚úó No')}`,
      `  ${chalk.hex('#B0B0B0')('Router:')}       ${router ? chalk.hex('#2ECC71').bold('‚úì Yes') : chalk.red.bold('‚úó No')}`,
      `  ${chalk.hex('#B0B0B0')('Structure:')}    ${folderStructure ? chalk.hex('#2ECC71').bold('‚úì Yes') : chalk.red.bold('‚úó No')}`,
      ''
    ]);
    console.log('\\n');
    
    // 1. Create Vite project
    const spinner = ora({
      text: chalk.hex('#6C63FF')(`Creating ${framework} project with latest Vite...`),
      color: 'magenta',
      spinner: 'clock'
    }).start();
    
    execSync(`npm create vite@latest ${projectName} -- --template ${template}`, { stdio: 'inherit' });
    spinner.succeed(chalk.hex('#2ECC71')(`‚úì ${framework.charAt(0).toUpperCase() + framework.slice(1)} project created!`));
    
    process.chdir(projectPath);
    
    // 2. Install dependencies
    spinner.start(chalk.hex('#6C63FF')('Installing dependencies...'));
    execSync('npm install', { stdio: 'ignore' });
    spinner.succeed(chalk.hex('#2ECC71')('‚úì Dependencies installed!'));
    
    // 3. Setup Tailwind CSS v4 (LATEST BETA!)
    if (tailwind) {
      spinner.start(chalk.hex('#6C63FF')('Setting up Tailwind CSS v4 (Next-gen engine)...'));
      
      try {
        // Install Tailwind v4 beta with Vite plugin
        execSync('npm install -D tailwindcss@next @tailwindcss/vite@next', { stdio: 'ignore' });
        
        // Update vite.config
        const viteConfigFile = isTypeScript ? 'vite.config.ts' : 'vite.config.js';
        
        if (fs.existsSync(viteConfigFile)) {
          try {
            let viteConfig = fs.readFileSync(viteConfigFile, 'utf8');
            
            // Add Tailwind import
            const importLine = "import tailwindcss from '@tailwindcss/vite'";
            if (!viteConfig.includes(importLine)) {
              const lines = viteConfig.split('\n');
              let lastImportIndex = -1;
              for (let i = lines.length - 1; i >= 0; i--) {
                if (lines[i].includes('import')) {
                  lastImportIndex = i;
                  break;
                }
              }
              if (lastImportIndex !== -1) {
                lines.splice(lastImportIndex + 1, 0, importLine);
              } else {
                lines.unshift(importLine);
              }
              viteConfig = lines.join('\n');
            }
            
            // Add to plugins array
            if (!viteConfig.includes('tailwindcss()')) {
              viteConfig = viteConfig.replace(
                /plugins:\s*\[/,
                'plugins: [\n    tailwindcss(),'
              );
            }
            
            fs.writeFileSync(viteConfigFile, viteConfig);
          } catch (fileError) {
            spinner.fail(chalk.red('‚úó Tailwind config file modification failed'));
            console.log(chalk.yellow('  Error: ' + fileError.message));
            throw fileError;
          }
        }
        
        // Use new @import syntax for Tailwind v4
        const cssContent = `@import "tailwindcss";\n\n/* Your custom styles below */\n`;
        
        const cssFiles = ['src/index.css', 'src/style.css', 'src/app.css'];
        const cssFile = cssFiles.find(file => fs.existsSync(file)) || 'src/index.css';
        fs.ensureFileSync(cssFile);
        fs.writeFileSync(cssFile, cssContent);
        
        spinner.succeed(chalk.hex('#2ECC71')('‚úì Tailwind CSS v4 configured!'));
        console.log(chalk.hex('#B0B0B0')('    Using latest @import syntax with Vite plugin'));
      } catch (error) {
        spinner.fail(chalk.red('‚úó Tailwind setup failed'));
        console.log(chalk.yellow('  Error: ' + error.message));
      }
    }
    
    // 4. Setup Router
    if (router) {
      spinner.start(chalk.hex('#6C63FF')(`Setting up ${framework} router...`));
      
      const routerPackages = {
        react: 'react-router-dom@latest',
        vue: 'vue-router@latest',
        svelte: 'svelte-routing@latest'
      };
      
      execSync(`npm install ${routerPackages[framework]}`, { stdio: 'ignore' });
      spinner.succeed(chalk.hex('#2ECC71')(`‚úì Latest ${framework} router installed!`));
    }
    
    // 5. Folder structure
    if (folderStructure) {
      spinner.start(chalk.hex('#6C63FF')('Creating organized structure...'));
      
      const folders = framework === 'vue' 
        ? ['components', 'views', 'composables', 'assets', 'stores']
        : framework === 'svelte'
        ? ['components', 'routes', 'stores', 'assets', 'lib']
        : ['components', 'pages', 'hooks', 'utils', 'assets'];
      
      folders.forEach(folder => {
        const folderPath = path.join('src', folder);
        fs.ensureDirSync(folderPath);
        
        const descriptions = {
          components: 'Reusable UI components',
          pages: 'Page components',
          views: 'Vue page components',
          routes: 'Svelte route components',
          hooks: 'Custom React hooks',
          composables: 'Vue composable functions',
          stores: 'State management',
          utils: 'Utility functions',
          lib: 'Library code',
          assets: 'Images, fonts, static files'
        };
        
        const readmeContent = `# ${folder.charAt(0).toUpperCase() + folder.slice(1)}\\n\\n${descriptions[folder] || 'Your code here'}`;
        fs.writeFileSync(path.join(folderPath, 'README.md'), readmeContent);
      });
      
      spinner.succeed(chalk.hex('#2ECC71')('‚úì Folder structure created!'));
    }
    
    // 6. Create README
    const readmeContent = `# ${projectName}
    
${frameworkInfo[framework].emoji} Built with ${framework.charAt(0).toUpperCase() + framework.slice(1)} ${isTypeScript ? '+ TypeScript' : ''}

## üöÄ Tech Stack

- **Framework:** ${framework.charAt(0).toUpperCase() + framework.slice(1)} (Latest)
- **Language:** ${isTypeScript ? 'TypeScript' : 'JavaScript'}
- **Build Tool:** Vite 5+ (Lightning fast HMR)
${tailwind ? '- **Styling:** Tailwind CSS v4 (Next-gen engine)\n' : ''}${router ? `- **Router:** Latest routing solution\n` : ''}## üéØ Quick Start

\`\`\`bash
npm run dev
\`\`\`

Open [http://localhost:5173](http://localhost:5173)

## üì¶ Scripts

- \`npm run dev\` - Start dev server
- \`npm run build\` - Production build
- \`npm run preview\` - Preview production build

## üìö Learn More

- [${framework.charAt(0).toUpperCase() + framework.slice(1)} Docs](${framework === 'react' ? 'https://react.dev' : framework === 'vue' ? 'https://vuejs.org' : framework === 'svelte' ? 'https://svelte.dev' : 'https://vitejs.dev'})
- [Vite Docs](https://vitejs.dev)
${tailwind ? '- [Tailwind v4 Docs](https://tailwindcss.com/docs/v4-beta)\n' : ''}Happy coding! üíª‚ú®
`;
    
    fs.writeFileSync('README.md', readmeContent);
    
    // Success message with modern design
    const frameworkEmojis = {
      react: '‚öõÔ∏è', vue: 'üíö', svelte: 'üî∫',
      preact: 'üî∑', lit: 'üî∂', vanilla: '‚ö°'
    };
    
    console.log('\\n');
    console.log(chalk.hex('#6C63FF')('‚îå' + '‚îÄ'.repeat(65) + '‚îê'));
    console.log(chalk.hex('#2ECC71').bold('  ‚ú® SUCCESS! Your project is ready to rock! ‚ú®'));
    console.log(chalk.hex('#6C63FF')('‚îî' + '‚îÄ'.repeat(65) + '‚îò'));
    console.log('');
    console.log(chalk.hex('#6C63FF').bold('  üìÇ Project:'), chalk.hex('#FFFFFF')(projectName), frameworkEmojis[framework]);
    console.log('');
    console.log(chalk.hex('#6C63FF').bold('  üöÄ Next Steps:'));
    console.log('');
    console.log(chalk.hex('#B0B0B0')('     1.'), chalk.hex('#6C63FF')(`cd ${projectName}`));
    console.log(chalk.hex('#B0B0B0')('     2.'), chalk.hex('#6C63FF')('npm run dev'));
    console.log(chalk.hex('#B0B0B0')('     3.'), chalk.hex('#6C63FF')('Open http://localhost:5173'));
    console.log('');
    
    if (tailwind) {
      console.log(chalk.hex('#6C63FF').bold('  üí° Tailwind v4 Tip:'));
      console.log(chalk.hex('#B0B0B0')('     Try: ') + chalk.hex('#FFFFFF')('className="bg-gradient-to-r from-blue-500 to-purple-600"'));
      console.log(chalk.hex('#B0B0B0')('     New features: Enhanced gradients, better performance!'));
      console.log('');
    }
    
    if (router) {
      console.log(chalk.hex('#6C63FF').bold('  üß≠ Router Docs:'));
      const routerDocs = {
        react: 'https://reactrouter.com',
        vue: 'https://router.vuejs.org',
        svelte: 'https://github.com/EmilTholin/svelte-routing'
      };
      console.log(chalk.hex('#B0B0B0')(`     ${routerDocs[framework]}`));
      console.log('');
    }
    
    console.log(chalk.hex('#6C63FF')('‚îå' + '‚îÄ'.repeat(65) + '‚îê'));
    console.log(chalk.hex('#B0B0B0')('  Need help? Check README.md or visit docs!'));
    console.log(chalk.hex('#6C63FF')('‚îî' + '‚îÄ'.repeat(65) + '‚îò'));
    console.log('');
    
  } catch (error) {
    console.log('');
    console.log(chalk.hex('#FF4757')('‚îå' + '‚îÄ'.repeat(65) + '‚îê'));
    console.log(chalk.red.bold('  ‚ùå ERROR'));
    console.log(chalk.hex('#FF4757')('‚îî' + '‚îÄ'.repeat(65) + '‚îò'));
    console.log('');
    console.log(chalk.hex('#FFFFFF')('  Message:'), chalk.hex('#FFD93D')(error.message));
    console.log('');
    console.log(chalk.hex('#6C63FF')('  üí° Troubleshooting:'));
    console.log(chalk.hex('#B0B0B0')('     ‚Ä¢ Check internet connection'));
    console.log(chalk.hex('#B0B0B0')('     ‚Ä¢ Ensure Node.js >= 18 (node --version)'));
    console.log(chalk.hex('#B0B0B0')('     ‚Ä¢ Try running again'));
    console.log('');
    console.log(chalk.hex('#FF4757')('‚îå' + '‚îÄ'.repeat(65) + '‚îê'));
    console.log('');
    process.exit(1);
  }
}

createProject();